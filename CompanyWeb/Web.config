<?xml version="1.0"?>
<!-- 
    注意: 除了手动编辑此文件以外，您还可以使用 
    Web 管理工具来配置应用程序的设置。可以使用 Visual Studio 中的
     “网站”->“Asp.Net 配置”选项。
    设置和注释的完整列表在 
    machine.config.comments 中，该文件通常位于 
    \Windows\Microsoft.Net\Framework\v2.x\Config 中
-->
<configuration>
  <appSettings>
    <add key="DBType" value="Access"/>
    <add key="SubTitle" value="后台管理框架"/>
    <add key="Title" value="OA(办公自动化)管理系统"/>
  </appSettings>
  <connectionStrings>
    <add name="SQL" connectionString="server=sqloledb;data source=qds115938189.my3w.com;User ID=qds115938189;pwd=zhangjian;Initial Catalog=qds115938189_db"/>
    <add name="SQL-2017年4月28日12:13:04" connectionString="server=sqloledb;data source=qds223749622.my3w.com;User ID=qds223749622;pwd=zhangjian;Initial Catalog=qds223749622_db"/>
    <add name="SQL1" connectionString="server=sqloledb;data source=qds154698337.my3w.com;User ID=qds154698337;pwd=zhangjian;Initial Catalog=qds154698337_db"/>
    <!--<add name="SQL" connectionString="Data Source=.;Initial Catalog=db;Persist Security Info=True;User ID=sa;Password=sa"/>-->
    <add name="Access" connectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" providerName="System.Data.OleDb"/>
    <add name="dbPath" connectionString="~/App_Data/db3.mdb"/>
    <add name="dbPath2" connectionString="~/App_Data/address.mdb"/>
  </connectionStrings>
  <!--
    有关 web.config 更改的说明，请参见 http://go.microsoft.com/fwlink/?LinkId=235367。

    可在 <httpRuntime> 标记上设置以下特性。
      <system.Web>
        <httpRuntime targetFramework="4.5" />
      </system.Web>
  -->
  <system.web>
    <pages theme="Style" enableEventValidation="false" controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
    <!-- 
            设置 compilation debug="true" 将调试符号插入
            已编译的页面中。但由于这会 
            影响性能，因此只在开发过程中将此值 
            设置为 true。
        -->
    <compilation debug="true" targetFramework="4.5"/>
    <!--
            通过 <authentication> 节可以配置 ASP.NET 使用的 
            安全身份验证模式，
            以标识传入的用户。 
        -->
    <authentication mode="Windows"/>
    <!--
            如果在执行请求的过程中出现未处理的错误，
            则通过 <customErrors> 节可以配置相应的处理步骤。具体说来，
            开发人员通过该节可以配置
            要显示的 html 错误页
            以代替错误堆栈跟踪。
  -->
    <customErrors mode="Off"/>
    <globalization requestEncoding="utf-8" responseEncoding="utf-8" culture="zh-CN" fileEncoding="utf-8"/>
  </system.web>
</configuration>